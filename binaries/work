#!/bin/bash

if test "${BASH_SOURCE[0]}" = "$0"; then
  echo "ERROR: This command must be sourced"
  echo "It can be setup as an alias like this:"
  echo "  alias $(basename "$0")=\". $(basename "$0")\""
  exit 1
fi

if test -z "$WORKSPACE"; then
  if test -d "$HOME/Documents"; then
    WORKSPACE="$HOME/Documents"
  else
    echo "ERROR: WORKSPACE is not set"
    return 1
  fi
fi
query=""

command="cd"
if ! test -t 1; then
  command="echo"
fi

if test "$1" = "-"; then
  "$command" "$WORKSPACE" || exit
  return
elif test -n "$@"; then
  query="--query=$*"
fi

if test -n "$(command -v fd)"; then
  search() {
    fd --type d --max-depth 3 --unrestricted --full-path "$WORKSPACE/[^/]+$|forks/[^/]+$" "$WORKSPACE" | rev
  }
else
  search() {
    find "$WORKSPACE" -mindepth 1 -maxdepth 3 \( \( -type d -name '.git' \) -or \( -type f -name '.gitignore' \) \) | rev | cut -d'/' -f2-
  }
fi

output="$(search | rev | fzf --height=20 --print-query '--preview=git -C {} branch' '--bind=ctrl-/:toggle-preview' "$query")"
query="$(echo "$output" | sed -n 1p)"
selection="$(echo "$output" | sed -n 2p)"
if test -n "$selection"; then
  "$command" "$selection" || exit
elif test -z "$selection" -a -n "$query" -a "$command" = "cd"; then
  if test -d "$WORKSPACE/$query"; then
    "$command" "$WORKSPACE/$query" || exit
    return
  fi

  printf "Create %s? [y/N] " "$WORKSPACE/$query"
  while true; do
    read -r REPLY
    case "$REPLY" in
      y|Y)
        mkdir -p "$WORKSPACE/$query" || exit
        "$command" "$WORKSPACE/$query" || exit
        break
        ;;
      *)
        break
        ;;
    esac
  done
fi
